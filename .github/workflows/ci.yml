name: ci
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  unit:
    name: Unit tests (${{ matrix.lang }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lang: [go, python]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        if: matrix.lang == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Go test
        if: matrix.lang == 'go'
        run: go test ./... -coverprofile=coverage.out
      - name: Set up Python
        if: matrix.lang == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Python deps & tests
        if: matrix.lang == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r pyservice/requirements.txt pytest
          PYTHONPATH=pyservice pytest -q

  docker-build:
    name: Build images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Go image
        run: docker build -t ci-demo-go:${{ github.sha }} -f Dockerfile .
      - name: Build Python image
        run: docker build -t ci-demo-py:${{ github.sha }} pyservice

  compose-smoke:
    name: Docker Compose smoke test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: app
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d app"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20
    steps:
      - uses: actions/checkout@v4
      - name: Start stack
        run: docker compose up --build -d
      - name: Probe Go health
        run: |
          for i in {1..30}; do
            curl -sf http://localhost:8080/health && exit 0 || sleep 2
          done
          echo "Go API not healthy" && exit 1
      - name: Probe Python health
        run: |
          for i in {1..30}; do
            curl -sf http://localhost:8000/health && exit 0 || sleep 2
          done
          echo "Python API not healthy" && exit 1
      - name: Bring down
        if: always()
        run: docker compose down -v
