name: ci

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    name: Unit tests (${{ matrix.lang }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lang: [go, python]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Go ---
      - name: Set up Go
        if: matrix.lang == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'
          check-latest: true

      - name: Cache Go build
        if: matrix.lang == 'go'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Go version
        if: matrix.lang == 'go'
        run: |
          go version
          go env GOTOOLCHAIN

      - name: Go test
        if: matrix.lang == 'go'
        env:
          GOTOOLCHAIN: auto
        run: |
          go test ./... -covermode=atomic -coverprofile=coverage.out

      # --- Python ---
      - name: Set up Python
        if: matrix.lang == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        if: matrix.lang == 'python'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyservice/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Python deps & tests
        if: matrix.lang == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r pyservice/requirements.txt
          PYTHONPATH=pyservice pytest -q

  docker-build:
    name: Build images
    runs-on: ubuntu-latest
    needs: [unit]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Go image
        run: docker build -t ci-demo-go:${{ github.sha }} -f Dockerfile .

      - name: Build Python image
        run: docker build -t ci-demo-py:${{ github.sha }} pyservice

  compose-smoke:
    name: Docker Compose migration + smoke
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Compose version
        run: docker compose version

      # Starta stacken (db + api:er)
      - name: Start stack
        run: docker compose up --build -d

      # Kör migreringar mot den uppstartade DB:n
      - name: Run DB migrations
        run: docker compose run --rm migrate

      # Proba Go
      - name: Probe Go health
        run: |
          for i in {1..30}; do
            curl -sf http://localhost:8080/health && exit 0 || sleep 2
          done
          echo "Go API not healthy" && exit 1

      # Proba Python
      - name: Probe Python health
        run: |
          for i in {1..30}; do
            curl -sf http://localhost:8000/health && exit 0 || sleep 2
          done
          echo "Python API not healthy" && exit 1

      - name: Bring down
        if: always()
        run: docker compose down -v

  # (valfritt, om du redan har publicering till GHCR – behåll detta jobb)
  publish-images:
    name: Publish images to GHCR
    runs-on: ubuntu-latest
    needs: [unit, docker-build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push Go image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/go:latest
            ghcr.io/${{ github.repository }}/go:${{ github.sha }}
      - name: Build & push Python image
        uses: docker/build-push-action@v6
        with:
          context: pyservice
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/py:latest
            ghcr.io/${{ github.sha }}
            ghcr.io/${{ github.repository }}/py:${{ github.sha }}
